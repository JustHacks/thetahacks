{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport firebase from \"firebase\";\n\nfunction SignupPage({}) {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n\n  function signup() {\n    return firebase.auth().createUserWithEmailAndPassword(email, password);\n  }\n\n  ;\n\n  function validate() {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = \"Required\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = \"Invalid email address\";\n    } else if (password.length < 8) {\n      errors.password = \"Password too short.\";\n    } else if (password.length > 128) {\n      errors.password = \"Password too long.\";\n    }\n\n    return errors;\n  }\n\n  ;\n  return __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: validate,\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await signup(values);\n      setSubmitting(false);\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.email\n  }), errors.email && touched.email && errors.email, __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password\n  }), errors.password && touched.password && errors.password, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting\n  }, \" Submit \")));\n}\n\n;\nexport default LoginPage;","map":{"version":3,"sources":["/home/runner/thetahacks/pages/login.js"],"names":["React","useState","Formik","firebase","SignupPage","email","setEmail","password","setPassword","signup","auth","createUserWithEmailAndPassword","validate","errors","values","test","length","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","LoginPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,SAASC,UAAT,CAAoB,EAApB,EAAwB;AACvB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASQ,MAAT,GAAiB;AAChB,WAAON,QAAQ,CAACO,IAAT,GAAgBC,8BAAhB,CAA+CN,KAA/C,EAAsDE,QAAtD,CAAP;AACA;;AAAA;;AACD,WAASK,QAAT,GAAmB;AAClB,UAAMC,MAAM,GAAG,EAAf;;AAEA,QAAI,CAACC,MAAM,CAACT,KAAZ,EAAmB;AAClBQ,MAAAA,MAAM,CAACR,KAAP,GAAe,UAAf;AACA,KAFD,MAEO,IAAI,CAAC,2CAA2CU,IAA3C,CAAgDD,MAAM,CAACT,KAAvD,CAAL,EAAoE;AAC1EQ,MAAAA,MAAM,CAACR,KAAP,GAAe,uBAAf;AACA,KAFM,MAEA,IAAIE,QAAQ,CAACS,MAAT,GAAkB,CAAtB,EAAwB;AAC9BH,MAAAA,MAAM,CAACN,QAAP,GAAkB,qBAAlB;AACA,KAFM,MAEA,IAAIA,QAAQ,CAACS,MAAT,GAAkB,GAAtB,EAA0B;AAChCH,MAAAA,MAAM,CAACN,QAAP,GAAkB,oBAAlB;AACA;;AACD,WAAOM,MAAP;AACA;;AAAA;AAED,SACC,MAAC,MAAD;AACC,IAAA,aAAa,EAAE;AAAER,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,QAAQ,EAAE;AAAvB,KADhB;AAEC,IAAA,QAAQ,EAAEK,QAFX;AAGC,IAAA,QAAQ,EAAE,OAAOE,MAAP,EAAe;AAAEG,MAAAA;AAAF,KAAf,KAAqC;AAC9C,YAAMR,MAAM,CAACK,MAAD,CAAZ;AACAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA;AANF,KAQE,CAAC;AAAEH,IAAAA,MAAF;AAAUD,IAAAA,MAAV;AAAkBK,IAAAA,OAAlB;AAA2BC,IAAAA,YAA3B;AAAyCC,IAAAA,UAAzC;AAAqDC,IAAAA,YAArD;AAAmEC,IAAAA;AAAnE,GAAD,KACA;AAAM,IAAA,QAAQ,EAAED;AAAhB,KACC;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,QAAQ,EAAEF,YAHX;AAIC,IAAA,MAAM,EAAEC,UAJT;AAKC,IAAA,KAAK,EAAEN,MAAM,CAACT;AALf,IADD,EAQEQ,MAAM,CAACR,KAAP,IAAgBa,OAAO,CAACb,KAAxB,IAAiCQ,MAAM,CAACR,KAR1C,EAUC;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,IAAI,EAAC,UAFN;AAGC,IAAA,QAAQ,EAAEc,YAHX;AAIC,IAAA,MAAM,EAAEC,UAJT;AAKC,IAAA,KAAK,EAAEN,MAAM,CAACP;AALf,IAVD,EAiBEM,MAAM,CAACN,QAAP,IAAmBW,OAAO,CAACX,QAA3B,IAAuCM,MAAM,CAACN,QAjBhD,EAmBC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEe;AAAhC,gBAnBD,CATF,CADD;AAkCA;;AAAA;AAED,eAAeC,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport firebase from \"firebase\";\n\nfunction SignupPage({ }){\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\n\tfunction signup(){\n\t\treturn firebase.auth().createUserWithEmailAndPassword(email, password);\n\t};\n\tfunction validate(){\n\t\tconst errors = {};\n\n\t\tif (!values.email) {\n\t\t\terrors.email = \"Required\";\n\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n\t\t\terrors.email = \"Invalid email address\";\n\t\t} else if (password.length < 8){\n\t\t\terrors.password = \"Password too short.\";\n\t\t} else if (password.length > 128){\n\t\t\terrors.password = \"Password too long.\";\n\t\t}\n\t\treturn errors;\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{ email: '', password: '' }}\n\t\t\tvalidate={validate}\n\t\t\tonSubmit={async (values, { setSubmitting }) => {\n\t\t\t\tawait signup(values);\n\t\t\t\tsetSubmitting(false);\n\t\t\t}}\n\t\t>\n\t\t\t{({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.email && touched.email && errors.email}\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.password && touched.password && errors.password}\n\t\t\t\t\t\n\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting}> Submit </button>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}