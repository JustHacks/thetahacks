{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport firebase from \"firebase\";\n\nfunction LoginPage(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  function login() {\n    firebase.auth().createUserWithEmailAndPassword(email, password);\n  }\n\n  ;\n\n  function verify() {\n    return password.length > 8 && password.length < 128;\n  }\n\n  ;\n  return __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n      } else if (password.length < 8) {\n        errors.password = \"Password too short.\";\n      } else if (password.length > 128) {\n        errors.password = \"Password too long.\";\n      }\n\n      return errors;\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref2.setSubmitting;\n                _context.next = 3;\n                return firebase.auth().createUserWithEmailAndPassword(values.email, values.password);\n\n              case 3:\n                setSubmitting(false);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  }, function (_ref4) {\n    var values = _ref4.values,\n        errors = _ref4.errors,\n        touched = _ref4.touched,\n        handleChange = _ref4.handleChange,\n        handleBlur = _ref4.handleBlur,\n        handleSubmit = _ref4.handleSubmit,\n        isSubmitting = _ref4.isSubmitting;\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit\n    }, __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email\n    }), errors.email && touched.email && errors.email, __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password\n    }), errors.password && touched.password && errors.password, __jsx(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting\n    }, \" Submit \"));\n  });\n}\n\n_s(LoginPage, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = LoginPage;\n;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/runner/thetahacks/pages/login.js"],"names":["React","useState","Formik","firebase","LoginPage","email","setEmail","password","setPassword","login","auth","createUserWithEmailAndPassword","verify","length","values","errors","test","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport firebase from \"firebase\";\n\nfunction LoginPage({ }){\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\n\tfunction login(){\n\t\tfirebase.auth().createUserWithEmailAndPassword(email, password);\n\t};\n\tfunction verify(){\n\t\treturn password.length > 8 && password.length < 128;\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{ email: '', password: '' }}\n\t\t\tvalidate={values => {\n\t\t\t\tconst errors = {};\n\n\t\t\t\tif (!values.email) {\n\t\t\t\t\terrors.email = \"Required\";\n\t\t\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n\t\t\t\t\terrors.email = \"Invalid email address\";\n\t\t\t\t} else if (password.length < 8){\n\t\t\t\t\terrors.password = \"Password too short.\";\n\t\t\t\t} else if (password.length > 128){\n\t\t\t\t\terrors.password = \"Password too long.\";\n\t\t\t\t}\n\t\t\t\treturn errors;\n\t\t\t}}\n\t\t\tonSubmit={async (values, { setSubmitting }) => {\n\t\t\t\tawait firebase.auth().createUserWithEmailAndPassword(values.email, values.password);\n\t\t\t\tsetSubmitting(false);\n\t\t\t}}\n\t\t>\n\t\t\t{({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.email && touched.email && errors.email}\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.password && touched.password && errors.password}\n\t\t\t\t\t\n\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting}> Submit </button>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}