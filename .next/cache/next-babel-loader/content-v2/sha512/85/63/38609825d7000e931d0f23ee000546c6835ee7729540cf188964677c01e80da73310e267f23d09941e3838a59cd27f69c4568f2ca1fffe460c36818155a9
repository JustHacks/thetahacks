{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/runner/thetahacks/pages/signup.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport Link from 'next/link';\nimport firebase from \"firebase\";\n\nvar SignupPage = function SignupPage() {\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n      var email, password, setSubmitting, user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _ref.email, password = _ref.password;\n              setSubmitting = _ref2.setSubmitting;\n              _context.next = 4;\n              return firebase.auth().createUserWithEmailAndPassword(email, password);\n\n            case 4:\n              user = _context.sent;\n              setSubmitting(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var validate = function validate(_ref4) {\n    var email = _ref4.email,\n        password = _ref4.password;\n    var errors = {};\n\n    if (!email) {\n      errors.email = \"Required\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      errors.email = \"Invalid email address\";\n    } else if (password.length < 6) {\n      errors.password = \"Password too short.\";\n    } else if (displayName.length < 3) {\n      errors.displayName = \"Display name too short.\";\n    }\n\n    return errors;\n  };\n\n  return __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      displayName: ''\n    },\n    validate: validate,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, function (_ref5) {\n    var values = _ref5.values,\n        errors = _ref5.errors,\n        touched = _ref5.touched,\n        handleChange = _ref5.handleChange,\n        handleBlur = _ref5.handleBlur,\n        handleSubmit = _ref5.handleSubmit,\n        isSubmitting = _ref5.isSubmitting;\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"displayName\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }\n    }), errors.displayName && touched.displayName && errors.displayName, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }\n    }, \"Email:\"), __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      p: true,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }\n    }), errors.email && touched.email && errors.email, __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }\n    }, \"Password:\"), __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password..\",\n      id: \"password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }\n    }), errors.password && touched.password && errors.password, __jsx(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, \" Submit \"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }\n    }, \"Have an account? \", __jsx(Link, {\n      href: \"/login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 26\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 46\n      }\n    }, \"Login\")))));\n  });\n};\n\n_c = SignupPage;\nexport default SignupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["/home/runner/thetahacks/pages/signup.js"],"names":["React","useState","Formik","Link","firebase","SignupPage","onSubmit","email","password","setSubmitting","auth","createUserWithEmailAndPassword","user","validate","errors","test","length","displayName","values","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport Link from 'next/link';\nimport firebase from \"firebase\";\n\nconst SignupPage = () => {\n\t\n\tconst onSubmit = async ({ email, password }, { setSubmitting }) => {\n\t\tconst user = await firebase.auth().createUserWithEmailAndPassword(email, password);\n\t\tsetSubmitting(false);\n\t};\n\n\tconst validate = ({ email, password }) => {\n\t\tconst errors = {};\n\n\t\tif (!email) {\n\t\t\terrors.email = \"Required\";\n\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n\t\t\terrors.email = \"Invalid email address\";\n\t\t} else if (password.length < 6){\n\t\t\terrors.password = \"Password too short.\";\n\t\t} else if (displayName.length < 3){\n\t\t\terrors.displayName = \"Display name too short.\";\n\t\t}\n\t\treturn errors;\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{ email: '', password: '', displayName: '' }}\n\t\t\tvalidate={validate}\n\t\t\tonSubmit={onSubmit}\n\t\t>\n\t\t\t{({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\n\t\t\t\t<div className=\"container\">\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"displayName\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.displayName && touched.displayName && errors.displayName}\n\t\t\t\t\t\n\t\t\t\t\t<label htmlFor=\"email\">Email:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tp\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.email && touched.email && errors.email}\n\n\t\t\t\t\t<label htmlFor=\"password\">Password:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password..\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.password && touched.password && errors.password}\n\t\t\t\t\t\n\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting}> Submit </button>\n\t\t\t\t\t<p>Have an account? <Link href=\"/login\"><a>Login</a></Link></p>\n\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nexport default SignupPage;"]},"metadata":{},"sourceType":"module"}