{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport Link from 'next/link';\nimport firebase from \"firebase\";\n\nconst SignupPage = () => {\n  const onSubmit = async ({\n    email,\n    password\n  }, {\n    setSubmitting\n  }) => {\n    const user = await firebase.auth().createUserWithEmailAndPassword(email, password);\n    setSubmitting(false);\n  };\n\n  const validate = ({\n    email,\n    password\n  }) => {\n    const errors = {};\n\n    if (!email) {\n      errors.email = \"Required\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      errors.email = \"Invalid email address\";\n    } else if (password.length < 6) {\n      errors.password = \"Password too short.\";\n    } else if (displayName.length < 3) {\n      errors.displayName = \"Display name too short.\";\n    }\n\n    return errors;\n  };\n\n  return __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      displayName: ''\n    },\n    validate: validate,\n    onSubmit: onSubmit\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"displayName\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.email\n  }), errors.displayName && touched.displayName && errors.displayName, __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email:\"), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.email\n  }), errors.email && touched.email && errors.email, __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password:\"), __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password\n  }), errors.password && touched.password && errors.password, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting\n  }, \" Submit \"), __jsx(\"p\", null, \"Have an account? \", __jsx(Link, {\n    href: \"/login\"\n  }, __jsx(\"a\", null, \"Login\")))));\n};\n\nexport default SignupPage;","map":null,"metadata":{},"sourceType":"module"}