{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport firebase from \"firebase\";\nimport \"../../lib/api\";\n\nconst NewCharity = () => {\n  const onSubmit = async ({\n    email,\n    password\n  }, {\n    setSubmitting\n  }) => {\n    // sen\n    setSubmitting(false);\n  };\n\n  const validate = ({\n    photo,\n    name,\n    description,\n    donationLinks,\n    website\n  }) => {\n    const errors = {};\n    let url;\n\n    try {\n      url = new URL(website);\n    } catch (e) {\n      errors.website = \"Invalid donation links.\";\n      return;\n    }\n\n    if (url.protocol != \"https\" || url.protocol != \"http\") {\n      errors.donationLinks = \"Invalid donation links.\";\n      return;\n    }\n\n    if (name.length < 8) {\n      errors.name = \"Charity name too short.\";\n    } else if (name.length > 64) {\n      errors.name = \"Charity name too long.\";\n    } else if (description.length < 32) {\n      errors.description = \"Description too short.\";\n    } else if (description.length > 512) {\n      errors.description = \"Description too long.\";\n    } else if (photo.size > 1024 * 1024 * 5) {\n      errors.photo = \"File too large.\";\n    } else {\n      const dLinks = donationLinks.split(\",\").map(link => link.trim()).filter(link => link);\n      dLinks.forEach(link => {\n        let url;\n\n        try {\n          url = new URL(link);\n        } catch (e) {\n          errors.donationLinks = \"Invalid donation links.\";\n          return;\n        }\n\n        if (url.protocol != \"https\" || url.protocol != \"http\") {\n          errors.donationLinks = \"Invalid donation links.\";\n          return;\n        }\n      });\n    }\n\n    return errors;\n  };\n\n  return __jsx(Formik, {\n    initialValues: {\n      name: '',\n      description: '',\n      donationLinks: '',\n      website: ''\n    },\n    validate: validate,\n    onSubmit: onSubmit\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"photo\",\n    onChange: e => setFieldValue(\"photo\", e.target.files[0]),\n    onBlur: handleBlur\n  }), errors.photo && touched.photo && errors.photo, __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.name\n  }), errors.name && touched.name && errors.name, __jsx(\"textarea\", {\n    type: \"text\",\n    name: \"description\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.description\n  }), errors.description && touched.description && errors.description, __jsx(\"input\", {\n    type: \"text\",\n    name: \"website\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.website\n  }), errors.website && touched.website && errors.website, __jsx(\"input\", {\n    type: \"text\",\n    name: \"donationLinks\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.donationLinks\n  }), errors.donationLinks && touched.donationLinks && errors.donationLinks, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting\n  }, \" Submit \")));\n};\n\nexport default NewCharity;","map":null,"metadata":{},"sourceType":"module"}